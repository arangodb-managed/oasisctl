version: 2.1
executors:
  go-executor:
    docker:
      - image: arangodboasis/golang-ci:latest
jobs:
  build:
    parameters:
      update_modules:
        type: boolean
        default: false
    executor: go-executor
    steps:
      - checkout
      - setup_remote_docker
      - run: cp go.sum go.sum.orig
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum.orig" }}
      - when:
          condition: <<parameters.update_modules>>
          steps:
            - run: |    
                make update-modules
      - run: |
          make all
      - run: |
          make test
      - store_test_results:
          path: bin/test/
      - store_artifacts: # upload test summary for display in Artifacts
          path: bin/test/
          destination: raw-test-output
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum.orig" }}
          paths:
            - "/go/pkg/mod"

  deploy-release:
    executor: go-executor
    steps:
      - checkout
      - setup_remote_docker
      - run: cp go.sum go.sum.orig
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum.orig" }}
      - run: |
          make all
      - run:
          name: "Publish Release on GitHub"
          command: |
            github-release release --user ${CIRCLE_PROJECT_USERNAME} --repo ${CIRCLE_PROJECT_REPONAME} --tag ${CIRCLE_TAG}
            sleep 10
            github-release upload --user ${CIRCLE_PROJECT_USERNAME} --repo ${CIRCLE_PROJECT_REPONAME} --tag ${CIRCLE_TAG} --name oasisctl.zip --file ./assets/oasisctl.zip
            make publish-oasis-tools

workflows:
  version: 2
  build_test_store_artifacts:
    jobs:
      - build:
          context: agrelease
          filters:
            tags:
              only: /.*/
      - deploy-release:
          context: agrelease
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
  nightly:
    triggers:
      - schedule:
          cron: "30 3 * * *" # format: <minute> <hour> <day-month> <month> <day-week> -- so every day at 03:30 
          filters:
            branches:
              only: master
    jobs:     
      - build:
          context: agrelease
          update_modules: true

